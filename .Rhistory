load("C:\\Users\\comet\\Desktop\\Zoo4\\Prelim beetle analyses.R")
library(gdata)
mortality<-read.table(file.choose(), header=T)
mortality
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(g.data)
mydata = read.xls("mortality.xls")
librart(xlsx)
library(xlsx)
mortality<-read.table(file.choose(), header=T)
mortality<-read.table(file.choose(), header=T)
mortality<-read.table(file.choose(),header=T)
mortality<-read.table(file.choose(),header=T)
mortality
head(mortality)
survfit(mortality)
library(survival)
survfit(mortality)
surv = Surv(mortality$week, event = abs(as.numeric(mortality$Censored)-2), type = "right")
surv = Surv(mortality$week, event = life(as.numeric(mortality$Censored)-2), type = "right")
q()
anova(result, test="F")
library(ggplot2)
library(minpack.lm)
require(graphics)
rm(list = ls())  # clear objects
graphics.off()  #close all open figures and graphics objects
IDir <- "../Data/"
ODir <- "../Results/"
dir.create(paste(ODir,'Figs',sep = ""),showWarnings = FALSE) #Create a directory for figures
# FileName <- "CRat.csv"
Data <- read.csv(file.choose())
FuncResp <- function(a,h,q_,x_R){
return(a * x_R^(q_ + 1)/(1+(a * h * x_R^(q_ + 1 ))))
}
GetStartVals <- function(tmpData){ #Generates starting values for the NLLS algorithm
h_Strt = 1
q_strt = 0
MaxDen <- max(tmpData$ResDensity_SI_VALUE)
MinDen <- min(tmpData$ResDensity_SI_VALUE)
a_Strt = min(tmpData[which(tmpData$ResDensity_SI_VALUE == MinDen),"N_TraitValue"]/MinDen)
return(list(a_Strt = a_Strt, h_Strt = h_Strt, q_strt = q_strt))
}
OutRows <- length(unique(Data[, "ID"]))
Data <- read.csv(file.choose())
# The relevant Columns: ID, N_TraitValue, ResDensity_SI_VALUE
########## Functions ##########
FuncResp <- function(a,h,q_,x_R){
# The generalized functional response model
return(a * x_R^(q_ + 1)/(1+(a * h * x_R^(q_ + 1 ))))
}
GetStartVals <- function(tmpData){ #Generates starting values for the NLLS algorithm
h_Strt = 1
q_strt = 0
MaxDen <- max(tmpData$ResDensity_SI_VALUE)
MinDen <- min(tmpData$ResDensity_SI_VALUE)
a_Strt = min(tmpData[which(tmpData$ResDensity_SI_VALUE == MinDen),"N_TraitValue"]/MinDen)
return(list(a_Strt = a_Strt, h_Strt = h_Strt, q_strt = q_strt))
}
########## Main Code ##########
OutRows <- length(unique(Data[, "ID"]))
IDs <- unique(Data$ID)
for (i in 1:length(IDs)){   # loop to run analysis for each data series separately
tmpData <- subset(Data, ID == IDs[i])
StartVals <- GetStartVals(tmpData)
NLSfit <- NULL
#   browser()
# 	plot(tmpData$ResDensity_SI_VALUE,tmpData$N_TraitValue)
NLSfit <- ...
###### PLOTTING ######
# Plot all the series
}
citation()
citation(lme4)
library(lme4)
citation(lme4)
citation("lme4")
citation("multicomp")
library(multcomp)
citation("multicomp")
citation("multcomp")
library(ggplot2)
citation("ggplot2")
load(lme4)
library("lme4", lib.loc="~/R/win-library/3.2")
citation('lme4')
setwd("C:/Users/Michael/Desktop/project/data")
wd
wd()
setwd("C:/Users/Michael/Desktop/project/data")
egg <- read.csv("eggs.csv")
setwd("C:/Users/Michael/Desktop/project/data")
getwd()
?TukeyHSD
library(ggplot2)
library(nlme)
library(lme4)
library(multcomp)
library(plyr)
library(dplyr)
library(aod)
library(chemCal)
citation()
citation("lme4")
citation("ggplot2")
citation("aod")
citation("chemCal")
citation("plyr")
citation("dplyr")
citation("Rmisc")
citation("gtools")
library(ggplot2)
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.2")
lsEBFtreat=data.frame(treatment=c("control","SA"), mean=c(0.04072487, 0.07968419), lower=c(-0.00151913, 0.03745035), upper=c(0.07993661, 0.121918))
lsEBFtreat$invmean <- inv.logit(lsEBFtreat$mean)
lsEBFtreat$invlow <- inv.logit(lsEBFtreat$lower)
lsEBFtreat$invhigh <- inv.logit(lsEBFtreat$upper)
lsEBFtreat
library("Rmisc", lib.loc="~/R/win-library/3.2")
lsEBFtreat=data.frame(treatment=c("control","SA"), mean=c(0.04072487, 0.07968419), lower=c(-0.00151913, 0.03745035), upper=c(0.07993661, 0.121918))
lsEBFtreat$invmean <- inv.logit(lsEBFtreat$mean)
lsEBFtreat$invlow <- inv.logit(lsEBFtreat$lower)
lsEBFtreat$invhigh <- inv.logit(lsEBFtreat$upper)
lsEBFtreat
library("gtools", lib.loc="~/R/win-library/3.2")
lsEBFtreat=data.frame(treatment=c("control","SA"), mean=c(0.04072487, 0.07968419), lower=c(-0.00151913, 0.03745035), upper=c(0.07993661, 0.121918))
lsEBFtreat$invmean <- inv.logit(lsEBFtreat$mean)
lsEBFtreat$invlow <- inv.logit(lsEBFtreat$lower)
lsEBFtreat$invhigh <- inv.logit(lsEBFtreat$upper)
lsEBFtreat
ggplot() +
geom_pointrange(data=lsEBFtreat, mapping=aes(x=treatment, y=invmean, ymin=invlow, ymax=invhigh), width=0.2, size=1, color="blue", fill="white", shape=22) +
theme(axis.title.y = element_text(size=20),
axis.title.x = element_text(size=20),
axis.text.x=element_text(size=16, colour="black"),
axis.text.y=element_text(size=16, colour="black")) +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black")) +
scale_y_continuous(name="Proportion of ebony females") +
scale_x_discrete(name="Treatment", limits=c("SA", "control"), labels=c("Selected", "Control")) +
coord_cartesian(ylim=c(0.48, 0.54))
remove.packages("ggplot2", lib="~/R/win-library/3.2")
library(ggplot2)
lsEBFtreat=data.frame(treatment=c("control","SA"), mean=c(0.04072487, 0.07968419), lower=c(-0.00151913, 0.03745035), upper=c(0.07993661, 0.121918))
lsEBFtreat$invmean <- inv.logit(lsEBFtreat$mean)
lsEBFtreat$invlow <- inv.logit(lsEBFtreat$lower)
lsEBFtreat$invhigh <- inv.logit(lsEBFtreat$upper)
lsEBFtreat
ggplot() +
geom_pointrange(data=lsEBFtreat, mapping=aes(x=treatment, y=invmean, ymin=invlow, ymax=invhigh), width=0.2, size=1, color="blue", fill="white", shape=22) +
theme(axis.title.y = element_text(size=20),
axis.title.x = element_text(size=20),
axis.text.x=element_text(size=16, colour="black"),
axis.text.y=element_text(size=16, colour="black")) +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black")) +
scale_y_continuous(name="Proportion of ebony females") +
scale_x_discrete(name="Treatment", limits=c("SA", "control"), labels=c("Selected", "Control")) +
coord_cartesian(ylim=c(0.48, 0.54))
library(lsmeans)
citation(lsmeans)
citation("lsmeans")
library(aod)
??aod
ashisanasshole <- read.csv("ash is an asshole.csv")
srt(ashisanasshole)
str(ashisanasshole)
setwd("C:/Users/Michael/Desktop/project/analysis/data")
##packages
library(ggplot2)
library(nlme)
library(lme4)
library(multcomp)
library(lsmeans)
egg <- read.csv("eggs.csv")
str(egg)
egg$population <- factor(egg$population)
egg <- read.csv("eggs.csv")
setwd("C:/Users/Michael/Desktop/project/analysis/data")
setwd("C:/Users/Michael/Desktop/project/analysis/data")
setwd("C:/Users/Michael/Documents/masters/project/analysis/data")
SP <- read.csv("sexpheno compilied.csv")
str(SP)
SP$pop <- factor(SP$pop)
SP <- na.omit(SP)
str(SP)
summary(SP)
setwd("C:/Users/Michael/Documents/masters/project/analysis/data")
sexgeno <- read.csv("sexgenotype.csv")
sexgeno$pop <- factor(sexgeno$pop)
sexgeno <- na.omit(sexgeno)
str(sexgeno)
summary(sexgeno)
par(mfrow=c(1,1))
hist(sexgeno$total)
par(mfrow=c(2,2))
hist(sexgeno$totF)
hist(sexgeno$totM)
hist(sexgeno$totee)
hist(sexgeno$totWT)
sexgeno = sexgeno[which(sexgeno$day < 17),]
sexgeno = sexgeno[which(sexgeno$day > 9),]
str(sexgeno)
summary(sexgeno)
hist(sexgeno$totF)
hist(sexgeno$totM)
hist(sexgeno$totee)
hist(sexgeno$totWT)
sexgeno <- read.csv("sexgenotype.csv")
library(ggplot2)
View(sexgeno)
plot(day~total)
plot(day~total, data=sexgeno)
plot(total~day, data=sexgeno)
box.plot(total~day, data=sexgeno)
totaperday <- ggplot(sexgeno, aes(x=day, y=total, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity", colour="black")
totaperday
totaperday <- ggplot(sexgeno, aes(x=day, y=total)) +
geom_bar(position=position_dodge(), stat="identity", colour="black")
totaperday
totaperday <- ggplot(sexgeno, aes(x=day, y=total)) +
geom_bar()
totaperday
totaperday <- ggplot(sexgeno, aes(x=day, y=total)) +
geom_bar(position=position_dodge())
totaperday
totaperday <- ggplot(sexgeno, aes(x=day, y=total)) +
geom_bar(position=position_dodge(), stat="identity")
totaperday
totaperday <- ggplot(sexgeno, aes(x=day, y=total)) +
geom_bar(position=position_dodge(), stat="identity") +
theme(axis.title.y = element_text(size=20),
axis.title.x = element_text(size=20),
axis.text.x=element_text(size=16, colour="black"),
axis.text.y=element_text(size=16, colour="black"),
legend.position="none") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"))
totaperday
totaperday <- ggplot(sexgeno, aes(x=day, y=total)) +
geom_bar(position=position_dodge(), stat="identity") +
theme(axis.title.y = element_text(size=20),
axis.title.x = element_text(size=20),
axis.text.x=element_text(size=16, colour="black"),
axis.text.y=element_text(size=16, colour="black"),
legend.position="none") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black")) +
scale_y_continuous(name="Total flies ecolosed per day") +
scale_x_continuous(name="Day since laying")
totaperday
par(mfrow=c(2,2))
hist(sexgeno$totF)
hist(sexgeno$totM)
hist(sexgeno$totee)
plot(total~day, data=sexgeno)
plot(totF~day, data=sexgeno)
plot(total~day, data=sexgeno)
plot(totF~day, data=sexgeno)
plot(totM~day, data=sexgeno)
plot(totee~day, data=sexgeno)
plot(totWT~day, data=sexgeno)
plot(totM~day, data=sexgeno)
plot(totee~day, data=sexgeno)
plot(total~day, data=sexgeno)
plot(totF~day, data=sexgeno)
plot(totM~day, data=sexgeno)
plot(totee~day, data=sexgeno)
plot(totWT~day, data=sexgeno)
plot(totF~day, data=sexgeno)
plot(totM~day, data=sexgeno)
plot(totee~day, data=sexgeno)
plot(totF~day, data=sexgeno)
plot(totM~day, data=sexgeno)
plot(totee~day, data=sexgeno)
plot(totWT~day, data=sexgeno)
plot(totF~day, data=sexgeno, ylab="Total female flies eclosed per day")
plot(totF~day, data=sexgeno, ylab="Total female flies eclosed per day", xlab="Days since egg laying")
plot(totF~day, data=sexgeno, ylab="Total female flies eclosed", xlab="Days since egg laying")
plot(totM~day, data=sexgeno,  ylab="Total male flies eclosed", xlab="Days since egg laying")
plot(totF~day, data=sexgeno, ylab="Total female flies eclosed", xlab="Days since egg laying")
plot(totM~day, data=sexgeno,  ylab="Total male flies eclosed", xlab="Days since egg laying")
plot(totee~day, data=sexgeno,  ylab="Total 'ebony' flies eclosed", xlab="Days since egg laying")
plot(totWT~day, data=sexgeno,  ylab="Total Wildtype flies eclosed", xlab="Days since egg laying")
sexgeno <- read.csv("sexgenotype.csv")
plot(totF~day, data=sexgeno, ylab="Total female flies eclosed", xlab="Days since egg laying")
plot(totM~day, data=sexgeno,  ylab="Total male flies eclosed", xlab="Days since egg laying")
plot(totee~day, data=sexgeno,  ylab="Total 'ebony' flies eclosed", xlab="Days since egg laying")
plot(totWT~day, data=sexgeno,  ylab="Total Wildtype flies eclosed", xlab="Days since egg laying")
sexgeno1 <- read.csv("sexgenotype.csv")
plot(totF~day, data=sexgeno1, ylab="Total female flies eclosed", xlab="Days since egg laying")
plot(totM~day, data=sexgeno1,  ylab="Total male flies eclosed", xlab="Days since egg laying")
plot(totee~day, data=sexgeno1,  ylab="Total 'ebony' flies eclosed", xlab="Days since egg laying")
plot(totWT~day, data=sexgeno1,  ylab="Total Wildtype flies eclosed", xlab="Days since egg laying")
plot(totF~day, data=sexgeno1, col=treatment, ylab="Total female flies eclosed", xlab="Days since egg laying")
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying")
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying", legend())
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying", pch=16)
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying", pch=treatment)
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying", pch=Treatment)
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying", pch=16)
plot(totF~day, data=sexgeno1, col=Treatment, ylab="Total female flies eclosed", xlab="Days since egg laying", pch=16)
plot(totM~day, data=sexgeno1, col=Treatment,  ylab="Total male flies eclosed", xlab="Days since egg laying", pch=16)
plot(totee~day, data=sexgeno1,  col=Treatment, ylab="Total 'ebony' flies eclosed", xlab="Days since egg laying", pch=16)
plot(totWT~day, data=sexgeno1, col=Treatment, ylab="Total Wildtype flies eclosed", xlab="Days since egg laying", pch=16)
